#version: '3'
services:
  zookeeper1:
    image: zookeeper:3.6.3
    hostname: zookeeper1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888,zookeeper2:2888:3888
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - my-network

  zookeeper2:
    image: zookeeper:3.6.3
    hostname: zookeeper2
    ports:
      - "2182:2181"
    environment:
      ZOOKEEPER_ID: 2
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888,zookeeper2:2888:3888
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - my-network

  kafka1:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2182
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka1:9092,OUTSIDE://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2      
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    networks:
      - my-network

  kafka2:
    image: wurstmeister/kafka:latest
    ports:
      - "9093:9093"
    environment:
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:29093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2182
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka2:9093,OUTSIDE://localhost:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2      
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    networks:
      - my-network

  producer-service0:
    build: ./producer-service
    ports:
      - "8080:8080"
    depends_on:
      - kafka1
      - kafka2
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    environment:
      KAFKA_BROKERS: kafka1:9092,kafka2:9093          
    networks:
      - my-network

  producer-service1:
    build: ./producer-service
    ports:
      - "8180:8080"
    depends_on:
      - kafka1
      - kafka2
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    environment:
      KAFKA_BROKERS: kafka2:9093,kafka1:9092
    networks:
      - my-network

  consumer-service0:
    build: ./consumer-service
    ports:
      - "8081:8080"
    depends_on:
      - kafka1
      - kafka2
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    environment:
      KAFKA_BROKERS: kafka1:9092,kafka2:9093          
    networks:
      - my-network

  consumer-service1:
    build: ./consumer-service
    ports:
      - "8181:8080"
    depends_on:
      - kafka1
      - kafka2
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    environment:
      KAFKA_BROKERS: kafka2:9093,kafka1:9092
    networks:
      - my-network

  frontend:
    image: python:3.9-slim
    volumes:
      - ./frontend:/app
    working_dir: /app
    command: python3 -m http.server --bind 0.0.0.0 8000
    ports:
      - "8000:8000"
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
